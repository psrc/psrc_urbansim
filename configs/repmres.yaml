name: repmres

model_type: segmented_regression

segmentation_col: land_use_type_id

fit_filters:
- land_use_type_id in [14, 15, 24]
- total_land_value_per_sqft >= 1
- total_land_value_per_sqft < 1096.63

predict_filters: null

min_segment_size: 10

default_config:
    model_expression: np.log1p(land_value) ~ np.log1p(parcel_sqft) + np.log1p(residential_units)  +
        np.log1p(building_sqft_pcl) + np.log1p(invfar+1) 
    #ytransform: np.exp
    # no transformation here - instead the model takes it from settings
    ytransform: 

models:
    multi_family:
        model_expression: np.log1p(land_value) ~ np.log1p(retail_density_wwd) + np.log1p(park_area_wwd) + 
            np.log1p(jobs_within_20_min_tt_hbw_am_transit_walk) + np.log1p(jobs_within_20_min_tt_hbw_am_drive_alone) +
            np.log1p(generalized_cost_hbw_am_drive_alone_to_cbd) + np.log1p(trip_weighted_average_time_hbw_from_home_am_drive_alone) + 
            I(avg_building_age > 60) + I(blds_with_valid_age == 0) + np.log1p(avg_building_age) + np.log1p(building_sqft_pcl) +
            np.log1p(building_density_wwd) + np.log1p(parcel_sqft) + number_of_good_public_schools_within_3000_radius +
            I(distance_to_arterial < 600) + np.log1p(residential_units) + np.log1p(number_of_jobs_per_acre) + np.log1p(income_per_person_wwd) +
            I(np.log1p(parcel_sqft)*(is_inside_urban_growth_boundary == 0) + I(is_inside_urban_growth_boundary == 0) + 
            np.log1p(developable_capacity) * (developable_capacity > 0)) + I(developable_capacity == 0) +
            is_waterfront
        name: 14
    condo: 
        model_expression: np.log1p(land_value) ~ np.log1p(population_per_acre) + np.log1p(park_area_wwd) + 
            np.log1p(jobs_within_20_min_tt_hbw_am_drive_alone) + np.log1p(generalized_cost_hbw_am_drive_alone_to_cbd) + 
            np.log1p(trip_weighted_average_time_hbw_from_home_am_drive_alone) + np.log1p(residential_units) + np.log1p(building_sqft_pcl) + 
            np.log1p(parcel_sqft) + I(number_of_good_public_schools_within_3000_radius == 0) + number_of_good_public_schools_within_3000_radius + 
            np.log1p(income_per_person_wwd) + np.log1p(number_of_jobs_per_acre) + np.log1p(total_improvement_value) + I(total_improvement_value <= 0) +
            np.log1p(developable_capacity) * (developable_capacity > 0) + is_waterfront
        name: 15
    single_family:
        model_expression: np.log1p(land_value) ~ np.log1p(retail_density_wwd) + np.log1p(park_area_wwd) + np.log1p(median_income) + 
            np.log1p(jobs_within_10_min_tt_hbw_am_walk) + np.log1p(jobs_within_20_min_tt_hbw_am_transit_walk) + 
            np.log1p(jobs_within_10_min_tt_hbw_am_drive_alone) + 
            np.log1p(generalized_cost_hbw_am_drive_alone_to_cbd) + 
            I(distance_to_arterial < 600) + I(distance_to_highway < 200) + 
            I(avg_building_age > 60) + I(avg_building_age < 10) + avg_building_age + I(blds_with_valid_age == 0) +
            np.log1p(parcel_sqft) + np.log1p(building_sqft_pcl) +
            I(np.log1p(parcel_sqft)*(is_inside_urban_growth_boundary == 0)) + I(is_inside_urban_growth_boundary == 0) +
            I(number_of_good_public_schools_within_3000_radius == 0) +
            np.log1p(building_density_wwd) + 
            np.log1p(total_improvement_value) + I(total_improvement_value <= 0) +
            avg_school_score + 
            np.log1p(generalized_cost_weighted_access_to_population_hbw_am_drive_alone) + 
            np.log1p(generalized_cost_weighted_access_to_employment_hbw_am_drive_alone) +
            is_waterfront
        #np.log1p(income_per_person_wwd) + # correlated with median_income
        name: 24

