name: Household Location Choice Model

model_type: segmented_discretechoice

segmentation_col: is_inmigrant

choosers_fit_filters: building_id > 0

choosers_predict_filters: 

alts_fit_filters:
- residential_units > 0

alts_predict_filters:
- vacant_residential_units > 0

interaction_predict_filters: null

choice_column: null

sample_size: 100

estimation_sample_size: 3000

prediction_sample_size: 100

default_config:
    model_expression: I((income>0)*1):I(1*(np.logical_or(mortgage_cost/income < 0.1,
        mortgage_cost/income > 0.5))) + ln_price_residual + multifamily_generic_type
        + I(np.where(income>0, (np.log1p(income)/(persons*persons*1.0)*(np.log1p(sqft_per_unit))),
        1)) + I((persons < 2)*1):I(np.logical_not(building_type_name == "single_family_residential")*1)
        + I(1*(np.logical_and(persons == 1, age_of_head < 50))):I(1*(np.log1p(employment_retail_wwd)>4))
        + I((tenure == 1)*1):I(~is_multifamily) + I((persons < 3)*1):I((large_area_id
        ==6)*1)

models:
    false:
        fit_parameters:
            Coefficient:
                I((income > 0) * 1):I(1 * (np.logical_or(mortgage_cost / income < 0.1, mortgage_cost / income > 0.4))): -1.0570787349806972
                I((persons < 2) * 1):I(np.logical_not(building_type_name == "single_family_residential") * 1): 1.5444164473064936
                I((persons > 3) * 1):I(np.logical_not(large_area_id == 6) * 1): 0.5425959012894987
                I((tenure == 1) * 1):I( ~is_multifamily): 2.1940176909756834
                I(1 * (np.logical_and(persons == 1, age_of_head < 50))):I(1 * (np.log1p(employment_retail_wwd) > 4)): 1.1423122693312096
                I(1 * (prev_residence_large_area_id == large_area_id)): 2.70028032632419
                I(1 * np.logical_and(multifamily_generic_type, prev_residence_is_mf)): 0.28766675168903955
                I(np.where(income > 0, (np.log1p(income) / (persons * persons * 1.0) * (np.log1p(sqft_per_unit))), 1)): -0.042030409634569485
                avg_network_distance_from_home_to_work(worker1_zone_id, worker2_zone_id, building_zone_id): 0.039457319895512995
                ln_price_residual: 0.23485859258121694
                ? max_logsum_hbw_am_from_home_to_work_wzone_logsum(worker1_zone_id,
                    worker2_zone_id, building_zone_id, income_category, twa_logsum_hbw_1,
                    twa_logsum_hbw_2, twa_logsum_hbw_3, twa_logsum_hbw_4)
                : 1.6260056257926574
                multifamily_generic_type: 2.339987472980727
            Std. Error:
                I((income > 0) * 1):I(1 * (np.logical_or(mortgage_cost / income < 0.1, mortgage_cost / income > 0.4))): 0.07360391046967722
                I((persons < 2) * 1):I(np.logical_not(building_type_name == "single_family_residential") * 1): 0.09326646222709345
                I((persons > 3) * 1):I(np.logical_not(large_area_id == 6) * 1): 0.08995702044236317
                I((tenure == 1) * 1):I( ~is_multifamily): 0.03836481196779246
                I(1 * (np.logical_and(persons == 1, age_of_head < 50))):I(1 * (np.log1p(employment_retail_wwd) > 4)): 0.08911723895650597
                I(1 * (prev_residence_large_area_id == large_area_id)): 0.04989123966602711
                I(1 * np.logical_and(multifamily_generic_type, prev_residence_is_mf)): 0.08083544587540815
                I(np.where(income > 0, (np.log1p(income) / (persons * persons * 1.0) * (np.log1p(sqft_per_unit))), 1)): 0.0013963881533202787
                avg_network_distance_from_home_to_work(worker1_zone_id, worker2_zone_id, building_zone_id): 0.002215746036702777
                ln_price_residual: 0.1072682679205324
                ? max_logsum_hbw_am_from_home_to_work_wzone_logsum(worker1_zone_id,
                    worker2_zone_id, building_zone_id, income_category, twa_logsum_hbw_1,
                    twa_logsum_hbw_2, twa_logsum_hbw_3, twa_logsum_hbw_4)
                : 0.02792246995582603
                multifamily_generic_type: 0.07958369819231371
            T-Score:
                I((income > 0) * 1):I(1 * (np.logical_or(mortgage_cost / income < 0.1, mortgage_cost / income > 0.4))): -14.361719754226705
                I((persons < 2) * 1):I(np.logical_not(building_type_name == "single_family_residential") * 1): 16.559183338015025
                I((persons > 3) * 1):I(np.logical_not(large_area_id == 6) * 1): 6.0317238012251435
                I((tenure == 1) * 1):I( ~is_multifamily): 57.18828213774584
                I(1 * (np.logical_and(persons == 1, age_of_head < 50))):I(1 * (np.log1p(employment_retail_wwd) > 4)): 12.818084163140643
                I(1 * (prev_residence_large_area_id == large_area_id)): 54.123335968396795
                I(1 * np.logical_and(multifamily_generic_type, prev_residence_is_mf)): 3.5586709341892035
                I(np.where(income > 0, (np.log1p(income) / (persons * persons * 1.0) * (np.log1p(sqft_per_unit))), 1)): -30.099374256814748
                avg_network_distance_from_home_to_work(worker1_zone_id, worker2_zone_id, building_zone_id): 17.80769061161401
                ln_price_residual: 2.189450777327805
                ? max_logsum_hbw_am_from_home_to_work_wzone_logsum(worker1_zone_id,
                    worker2_zone_id, building_zone_id, income_category, twa_logsum_hbw_1,
                    twa_logsum_hbw_2, twa_logsum_hbw_3, twa_logsum_hbw_4)
                : 58.23287224822999
                multifamily_generic_type: 29.402849152927722
        fitted: true
        log_likelihoods:
            convergence: -5603.549953057559
            'null': -9500.466093693487
            ratio: 0.4101815744832502
        model_expression: multifamily_generic_type + avg_network_distance_from_home_to_work(worker1_zone_id,
            worker2_zone_id, building_zone_id) + max_logsum_hbw_am_from_home_to_work_wzone_logsum(worker1_zone_id,
            worker2_zone_id, building_zone_id, income_category, twa_logsum_hbw_1,
            twa_logsum_hbw_2, twa_logsum_hbw_3, twa_logsum_hbw_4) + I(1*np.logical_and(multifamily_generic_type,
            prev_residence_is_mf)) + I((persons < 2)*1):I(np.logical_not(building_type_name
            == "single_family_residential")*1) + I((persons > 3)*1):I(np.logical_not(large_area_id
            == 6)*1) + I(1*(prev_residence_large_area_id == large_area_id)) + I((tenure
            == 1)*1):I(~is_multifamily) + ln_price_residual + I(1*(np.logical_and(persons
            == 1, age_of_head < 50))):I(1*(np.log1p(employment_retail_wwd)>4)) + I(np.where(income>0,
            (np.log1p(income)/(persons*persons*1.0)*(np.log1p(sqft_per_unit))), 1))
            + I((income>0)*1):I(1*(np.logical_or(mortgage_cost/income < 0.1, mortgage_cost/income
            > 0.4)))
        name: false
    !!python/long '1':
        fit_parameters:
            Coefficient:
                I((income > 0) * 1):I(1 * (np.logical_or(mortgage_cost / income < 0.1, mortgage_cost / income > 0.5))): 3.0
                I((persons < 2) * 1):I(np.logical_not(building_type_name == "single_family_residential") * 1): 2.1051164542567364
                I((persons < 3) * 1):I((large_area_id == 6) * 1): 2.115712859464572
                I((tenure == 1) * 1):I( ~is_multifamily): 2.631369937414788
                I(1 * (np.logical_and(persons == 1, age_of_head < 50))):I(1 * (np.log1p(employment_retail_wwd) > 4)): 2.1408459803514828
                I(np.where(income > 0, (np.log1p(income) / (persons * persons * 1.0) * (np.log1p(sqft_per_unit))), 1)): -0.03668384232972255
                ln_price_residual: 0.2883127897447222
                multifamily_generic_type: 2.7957747028821616
            Std. Error:
                I((income > 0) * 1):I(1 * (np.logical_or(mortgage_cost / income < 0.1, mortgage_cost / income > 0.5))): 0.10905933213156499
                I((persons < 2) * 1):I(np.logical_not(building_type_name == "single_family_residential") * 1): 0.1925851197016188
                I((persons < 3) * 1):I((large_area_id == 6) * 1): 0.09737472619642748
                I((tenure == 1) * 1):I( ~is_multifamily): 0.09147047216606007
                I(1 * (np.logical_and(persons == 1, age_of_head < 50))):I(1 * (np.log1p(employment_retail_wwd) > 4)): 0.16622275734855144
                I(np.where(income > 0, (np.log1p(income) / (persons * persons * 1.0) * (np.log1p(sqft_per_unit))), 1)): 0.0028297428975185123
                ln_price_residual: 0.30667720960848116
                multifamily_generic_type: 0.1004815822703826
            T-Score:
                I((income > 0) * 1):I(1 * (np.logical_or(mortgage_cost / income < 0.1, mortgage_cost / income > 0.5))): 27.507962329907862
                I((persons < 2) * 1):I(np.logical_not(building_type_name == "single_family_residential") * 1): 10.930836492031641
                I((persons < 3) * 1):I((large_area_id == 6) * 1): 21.727535902865462
                I((tenure == 1) * 1):I( ~is_multifamily): 28.76742488699159
                I(1 * (np.logical_and(persons == 1, age_of_head < 50))):I(1 * (np.log1p(employment_retail_wwd) > 4)): 12.879379541649381
                I(np.where(income > 0, (np.log1p(income) / (persons * persons * 1.0) * (np.log1p(sqft_per_unit))), 1)): -12.963666190978596
                ln_price_residual: 0.9401180808733591
                multifamily_generic_type: 27.82375276853327
        fitted: true
        log_likelihoods:
            convergence: -1700.8904572517617
            'null': -2615.7366656412546
            ratio: 0.3497470599416077
        name: !!python/long '1'

fitted: true

choice_mode: individual

remove_alts: false

probability_mode: full_product
